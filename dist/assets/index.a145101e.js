import e from"https://cdn.skypack.dev/gsap";import*as t from"https://unpkg.com/three@0.126.1/build/three.module.js";import{OrbitControls as o}from"https://unpkg.com/three@0.126.1/examples/jsm/controls/OrbitControls.js";import*as n from"https://cdn.skypack.dev/dat.gui";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(o){const n=new URL(e,location),i=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((o,s)=>{const a=new URL(e,n);if(self[t].moduleMap[a])return o(self[t].moduleMap[a]);const r=new Blob([`import * as m from '${a}';`,`${t}.moduleMap['${a}']=m;`],{type:"text/javascript"}),c=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(r),onerror(){s(new Error(`Failed to import: ${e}`)),i(c)},onload(){o(self[t].moduleMap[a]),i(c)}});document.head.appendChild(c)})),self[t].moduleMap={}}}("/assets/");const i=new n.GUI,s={width:400,height:400,widthSegments:50,heightSegments:50};function a(){l.geometry.dispose(),l.geometry=new t.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);const{array:e}=l.geometry.attributes.position,o=[];for(let t=0;t<e.length;t++){if(t%3==0){const o=e[t],n=e[t+1],i=e[t+2];e[t]=o+3*(Math.random()-.5),e[t+1]=n+3*(Math.random()-.5),e[t+2]=i+3*Math.random()}o.push(Math.random()*Math.PI*2)}l.geometry.attributes.position.randomValues=o,l.geometry.attributes.position.originalPosition=l.geometry.attributes.position.array;const n=[];for(let t=0;t<l.geometry.attributes.position.count;t++)n.push(0,.19,.4);l.geometry.setAttribute("color",new t.BufferAttribute(new Float32Array(n),3))}i.add(s,"width",1,500).onChange(a),i.add(s,"height",1,500).onChange(a),i.add(s,"widthSegments",1,100).onChange(a),i.add(s,"heightSegments",1,100).onChange(a);const r=new t.Raycaster,c=new t.Scene,d=new t.PerspectiveCamera(75,innerWidth/innerHeight,.1,1e3),m=new t.WebGLRenderer;m.setSize(innerWidth,innerHeight),m.setPixelRatio(devicePixelRatio),document.body.appendChild(m.domElement),new o(d,m.domElement),d.position.z=50;const h=new t.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments),g=new t.MeshPhongMaterial({side:t.DoubleSide,flatShading:t.FlatShading,vertexColors:!0}),l=new t.Mesh(h,g);c.add(l),a();const p=new t.DirectionalLight(16777215,1);p.position.set(0,-1,1),c.add(p);const u=new t.DirectionalLight(16777215,1);u.position.set(0,0,-1),c.add(u);const f={x:void 0,y:void 0};let b=0;m.render(c,d),function t(){requestAnimationFrame(t),m.render(c,d),r.setFromCamera(f,d),b+=.01;const{array:o,originalPosition:n,randomValues:i}=l.geometry.attributes.position;for(let e=0;e<o.length;e+=3)o[e]=n[e]+.01*Math.cos(b+i[e]),o[e+1]=n[e+1]+.001*Math.sin(b+i[e+1]);l.geometry.attributes.position.needsUpdate=!0;const s=r.intersectObject(l);if(s.length>0){const{color:t}=s[0].object.geometry.attributes;t.setX(s[0].face.a,.1),t.setY(s[0].face.b,.5),t.setZ(s[0].face.b,1),t.setX(s[0].face.c,.1),t.setY(s[0].face.c,.5),t.setZ(s[0].face.c,1),t.setX(s[0].face.c,.1),t.setY(s[0].face.c,.5),t.setZ(s[0].face.c,1),t.needsUpdate=!0;const o={r:0,g:.19,b:.4},n={r:.1,g:.5,b:1};e.to(n,{r:o.r,g:o.g,b:o.b,duration:1,onUpdate:()=>{t.setX(s[0].face.a,n.r),t.setY(s[0].face.a,n.g),t.setZ(s[0].face.a,n.b),t.setX(s[0].face.b,n.r),t.setY(s[0].face.b,n.g),t.setZ(s[0].face.b,n.b),t.setX(s[0].face.c,n.r),t.setY(s[0].face.c,n.g),t.setZ(s[0].face.c,n.b),t.needsUpdate=!0}})}}(),addEventListener("mousemove",(e=>{f.x=e.clientX/innerWidth*2-1,f.y=-e.clientY/innerHeight*2+1}));
